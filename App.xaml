<Application x:Class="HeroSlidebarTranslator.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:local="clr-namespace:HeroSlidebarTranslator" 
             xmlns:p = "clr-namespace:HeroSlidebarTranslator.Properties"
             Startup="App_Startup" Exit="App_Exit" ShutdownMode="OnExplicitShutdown"
			 LoadCompleted="Application_LoadCompleted"
			 >

	<Application.Resources>

		<ContextMenu x:Name="ContextmenuTray" x:Key="ContextmenuTray" >
			<MenuItem x:Name="MenuitemAutostartApp" Header="{x:Static p:Resources.Option_AutostartApp}" IsCheckable="True" StaysOpenOnClick="True" 
					  Checked="MenuitemRunStartup_CheckedChanged" Unchecked="MenuitemRunStartup_CheckedChanged"/>
			<Separator/>

			<MenuItem Style="{DynamicResource MenuitemBlockHeader}" x:Name="MenuitemP1Header" FontWeight="Bold" HeaderStringFormat="{}P1: {0}" Header="{x:Static p:Resources.Xbox_ConnectionAbsent}" />
			<MenuItem x:Name="MenuitemP1Active" IsEnabled="False" IsChecked="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Option_TranslatorEnable}" IsCheckable="True"/>
			<MenuItem x:Name="MenuitemP1Off" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Label_PowerOffController}"/>

			<MenuItem Style="{DynamicResource MenuitemBlockHeader}" x:Name="MenuitemP2Header" FontWeight="Bold" HeaderStringFormat="{}P2: {0}" Header="{x:Static p:Resources.Xbox_ConnectionAbsent}" />
			<MenuItem x:Name="MenuitemP2Active" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Option_TranslatorEnable}" IsCheckable="True"/>
			<MenuItem x:Name="MenuitemP2Off" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Label_PowerOffController}"/>

			<MenuItem Style="{DynamicResource MenuitemBlockHeader}" x:Name="MenuitemP3Header" FontWeight="Bold" HeaderStringFormat="{}P3: {0}" Header="{x:Static p:Resources.Xbox_ConnectionAbsent}" />
			<MenuItem x:Name="MenuitemP3Active" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Option_TranslatorEnable}" IsCheckable="True"/>
			<MenuItem x:Name="MenuitemP3Off" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Label_PowerOffController}"/>

			<MenuItem Style="{DynamicResource MenuitemBlockHeader}" x:Name="MenuitemP4Header" FontWeight="Bold" HeaderStringFormat="{}P4: {0}" Header="{x:Static p:Resources.Xbox_ConnectionAbsent}" />
			<MenuItem x:Name="MenuitemP4Active" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Option_TranslatorEnable}" IsCheckable="True"/>
			<MenuItem x:Name="MenuitemP4Off" IsEnabled="False" HeaderStringFormat="{}{0}" Header="{x:Static p:Resources.Label_PowerOffController}"/>

			<Separator />
			<MenuItem x:Name="MenuitemActivtnModeSelect" Header="{x:Static p:Resources.Label_ActivationMode}" >
				<MenuItem IsCheckable="True" Tag="FORE" local:MenuItemExtensions.GroupName="ActivtnMode" Checked="MenuitemActivtnMode_Checked" IsChecked="{Binding ActivationModeFore}" Header="{x:Static p:Resources.Item_ActivationModeForeground}" />
				<MenuItem IsCheckable="True" Tag="RUNN" local:MenuItemExtensions.GroupName="ActivtnMode" Checked="MenuitemActivtnMode_Checked" IsChecked="{Binding ActivationModeRunn}" Header="{x:Static p:Resources.Item_ActivationModeRunning}"/>
				<MenuItem IsCheckable="True" Tag="ALWA" local:MenuItemExtensions.GroupName="ActivtnMode" Checked="MenuitemActivtnMode_Checked" Header="{x:Static p:Resources.Item_ActivationModeAlways}" />
			</MenuItem>

			<Separator />
			<MenuItem Header="{x:Static p:Resources.Button_OpenSetup}" Click="MenuitemOpenSetup_Click" />
			<MenuItem Header="{x:Static p:Resources.Button_QuitApp}" Click="MenuitemCloseApp_Click" />
		</ContextMenu>


		<!--#region COLORS-->

		<Color x:Key="Back1Color">#f222</Color>
		<SolidColorBrush x:Key="Back1Brush" Color="{StaticResource Back1Color}" />

		<Color x:Key="Back2Color">#f333</Color>
		<SolidColorBrush x:Key="Back2Brush" Color="{StaticResource Back2Color}" />

		<Color x:Key="Back3Color">#f444</Color>
		<SolidColorBrush x:Key="Back3Brush" Color="{StaticResource Back3Color}" />

		<Color x:Key="Fore1Color">#ffff</Color>
		<SolidColorBrush x:Key="Fore1Brush" Color="{StaticResource Fore1Color}" />

		<Color x:Key="Fore2Color">#fddd</Color>
		<SolidColorBrush x:Key="Fore2Brush" Color="{StaticResource Fore2Color}" />

		<Color x:Key="ForeGrayedColor">#f888</Color>
		<SolidColorBrush x:Key="ForeGrayedBrush" Color="{StaticResource ForeGrayedColor}" />

		<Color x:Key="BorderLightColor">#fbbb</Color>
		<SolidColorBrush x:Key="BorderLightBrush" Color="{StaticResource BorderLightColor}" />

		<Color x:Key="BorderMidColor">#f999</Color>
		<SolidColorBrush x:Key="BorderMidBrush" Color="{StaticResource BorderMidColor}" />

		<Color x:Key="TextBlockColor">#feee</Color>
		<SolidColorBrush x:Key="TextBlockBrush" Color="{StaticResource TextBlockColor}" />

		<Color x:Key="TextInfoColor">#ffd5d5d5</Color>
		<SolidColorBrush x:Key="TextInfoBrush" Color="{StaticResource TextInfoColor}" />

		<Color x:Key="TextInactiveColor">#f999</Color>
		<SolidColorBrush x:Key="TextInactiveBrush" Color="{StaticResource TextInactiveColor}" />

		<Color x:Key="AccentLightColor">#60a8d1</Color>
		<SolidColorBrush x:Key="AccentLightBrush" Color="{StaticResource AccentLightColor}" />

		<Color x:Key="AccentPaleColor">#437591</Color>
		<SolidColorBrush x:Key="AccentPaleBrush" Color="{StaticResource AccentPaleColor}" />

		<Color x:Key="AccentPaleGlassColor">#9060a8d1</Color>
		<SolidColorBrush x:Key="AccentPaleGlassBrush" Color="{StaticResource AccentPaleColor}" />

		<Color x:Key="AccentDarkColor">#2C4251</Color>
		<SolidColorBrush x:Key="AccentDarkBrush" Color="{StaticResource AccentDarkColor}" />

		<Color x:Key="XboxDefColor">#FF4BC94A</Color>
		<SolidColorBrush x:Key="XboxDefBrush" Color="{StaticResource XboxDefColor}" />

		<Color x:Key="XboxMidColor">#ff499c49</Color>
		<SolidColorBrush x:Key="XboxMidBrush" Color="{StaticResource XboxMidColor}" />

		<Color x:Key="XboxPaleColor">#ff73c973</Color>
		<SolidColorBrush x:Key="XboxPaleBrush" Color="{StaticResource XboxPaleColor}" />

		<Color x:Key="XboxFadedColor">#ff385c38</Color>
		<SolidColorBrush x:Key="XboxFadedBrush" Color="{StaticResource XboxFadedColor}" />

		<Color x:Key="XboxDarkColor">#FF222822</Color>
		<SolidColorBrush x:Key="XboxDarkBrush" Color="{StaticResource XboxDarkColor}" />

		<Color x:Key="AppInactiveColor">#FF805050</Color>
		<SolidColorBrush x:Key="AppInactiveBrush" Color="{StaticResource AppInactiveColor}" />


		<!--Control colors-->

		<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
		<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
		<Color x:Key="DisabledForegroundColor">#FF888888</Color>

		<Color x:Key="SelectedUnfocusedColor">#faaa</Color>

		<Color x:Key="GlyphColor">#fccc</Color>
		<Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

		<!--Cotrol Thicknesses-->

		<Thickness x:Key="Test" Left="1" Top="1" Right="1" Bottom="1" />

		<!--Border colors-->

		<Color x:Key="BorderMediumColor">#7796CB</Color>
		<Color x:Key="BorderDarkColor">#42577b</Color>

		<Color x:Key="PressedBorderLightColor">#FF888888</Color>
		<Color x:Key="PressedBorderDarkColor">#FF444444</Color>

		<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
		<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

		<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

		<!--Guitar colors-->

		<Color x:Key="ControllerGreenColor">#f3c3</Color>
		<SolidColorBrush x:Key="ControllerGreenBrush" Color="{StaticResource ControllerGreenColor}" />
		<Color x:Key="ControllerRedColor">#fc33</Color>
		<SolidColorBrush x:Key="ControllerRedBrush" Color="{StaticResource ControllerRedColor}" />
		<Color x:Key="ControllerYellowColor">#fcc3</Color>
		<SolidColorBrush x:Key="ControllerYellowBrush" Color="{StaticResource ControllerYellowColor}" />
		<Color x:Key="ControllerBlueColor">#f33c</Color>
		<SolidColorBrush x:Key="ControllerBlueBrush" Color="{StaticResource ControllerBlueColor}" />
		<Color x:Key="ControllerOrangeColor">#fc93</Color>
		<SolidColorBrush x:Key="ControllerOrangeBrush" Color="{StaticResource ControllerOrangeColor}" />

		<!--#endregion-->



		<!--#region STYLES PER TYPE-->

		<Style TargetType="{x:Type Control}">
			<Setter Property="Foreground" Value="{StaticResource TextBlockBrush}" />
			<Setter Property="Margin" Value="6,4" />
			<Setter Property="FontSize" Value="10pt" />
			<Setter Property="FontWeight" Value="Normal" />
			<Setter Property="FontFamily" Value="Bahnschrift SemiLight" />
		</Style>

		<Style TargetType="{x:Type ContextMenu}">
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Grid.IsSharedSizeScope" Value="true" />
			<Setter Property="HasDropShadow" Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContextMenu}">
						<Border x:Name="Border" Background="{StaticResource Back2Brush}" BorderThickness="1" CornerRadius="1">
							<Border.BorderBrush>
								<SolidColorBrush Color="{StaticResource BorderMediumColor}" />
							</Border.BorderBrush>
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="HasDropShadow" Value="true">
								<Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
								<Setter TargetName="Border" Property="CornerRadius" Value="1" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
			<Setter Property="Background" Value="{DynamicResource Back2Brush}"/>
			<Setter Property="Foreground" Value="{DynamicResource ForeGrayedBrush}"/>
			<Setter Property="Margin" Value="0,2,0,2"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Separator}">
						<Border BorderBrush="{DynamicResource BorderMidBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{DynamicResource Back2Brush}" Height="1" SnapsToDevicePixels="true"/>
						<!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Height="1" SnapsToDevicePixels="true"/>-->
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type MenuItem}">
			<Style.Resources>
				<Style TargetType="{x:Type Grid}">
					<Setter Property="Background" Value="{StaticResource Back2Brush}"/>
				</Style>
			</Style.Resources>
			<Style.Triggers>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground"  Value="{DynamicResource ForeGrayedBrush}"/>
				</Trigger>
				<Trigger  Property="IsMouseOver"  Value="True">
					<Setter Property="Background" Value="{DynamicResource AccentLightBrush}"/>
					<Setter Property="Foreground"  Value="{DynamicResource Fore1Brush}"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background"  Value="{DynamicResource AccentLightBrush}"/>
					<Setter Property="Foreground"  Value="{DynamicResource Fore1Brush}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type ToolTip}">
			<Setter Property="HasDropShadow" Value="True"/>
			<Setter Property="Background" Value="{StaticResource Back2Brush}"/>
			<Setter Property="Foreground" Value="{StaticResource Fore1Brush}"/>
			<Style.Resources>
				<Style TargetType="{x:Type Border}">
					<Setter Property="CornerRadius" Value="1" />
					<Setter Property="BorderBrush" Value="{StaticResource BorderLightBrush}" />
				</Style>
			</Style.Resources>
		</Style>

		<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Control}}">
			<Setter Property="Background" Value="{StaticResource Back3Brush}"/>
			<Setter Property="Margin" Value="4"/>
			<Setter Property="ClickMode" Value="Release"/>

		</Style>

		<Style TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Name="OuterBorder" Background="Transparent" BorderThickness="1" BorderBrush="{StaticResource Fore2Brush}" CornerRadius="1.5">
							<Border Name="InnerBorder" Background="{StaticResource Back3Brush}" BorderThickness="1" CornerRadius="1.5">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="InnerBorder" Value="Gray" />
								<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource AccentLightBrush}" />
							</Trigger>
							<Trigger Property="IsChecked"  Value="true">
								<Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource AccentDarkBrush}" />
								<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource AccentLightBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Background" Value="{StaticResource Back3Brush}" />
			<Setter Property="Foreground" Value="{StaticResource Fore1Brush}" />
			<Setter Property="BorderBrush" Value="{StaticResource AccentLightBrush}" />
			<Setter Property="Margin" Value="2,1" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="FontSize" Value="10.5pt" />
			<Setter Property="FontWeight" Value="Normal" />
			<Setter Property="ClickMode" Value="Release" />
			<!--<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Background" Value="{StaticResource AccentDarkBrush}"/>
				</Trigger>
			</Style.Triggers>-->
		</Style>

		<Style TargetType="{x:Type TextBlock}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{StaticResource TextBlockBrush}" />
			<Setter Property="Margin" Value="6,4" />
			<Setter Property="FontSize" Value="10pt" />
			<Setter Property="LineHeight" Value="13pt" />
			<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		</Style>

		<Style TargetType="{x:Type Grid}">
			<Setter Property="Background" Value="{DynamicResource Back1Brush}" />
		</Style>

		<Style TargetType="{x:Type GridViewColumnHeader}">
			<Setter Property="Foreground" Value="{StaticResource TextBlockBrush}" />
		</Style>

		<Style TargetType="{x:Type xctk:IntegerUpDown}">
			<Setter Property="Foreground" Value="{StaticResource Fore1Brush}"/>
			<Setter Property="Margin" Value="4,3" />
			<Setter Property="TextAlignment" Value="Center"/>
			<Setter Property="ToolTip" Value="{x:Static p:Resources.Tooltip_Integerupdown100}"/>
			<Setter Property="FormatString" Value="D2"/>
			<Setter Property="AllowTextInput" Value="False"/>
		</Style>
		<Style TargetType="{x:Type xctk:DoubleUpDown}">
			<Setter Property="Foreground" Value="{StaticResource Fore1Brush}"/>
			<Setter Property="Margin" Value="4,3" />
			<Setter Property="TextAlignment" Value="Center"/>
			<Setter Property="ToolTip" Value="{x:Static p:Resources.Tooltip_Integerupdown100}"/>
			<Setter Property="FormatString" Value="F0"/>
			<Setter Property="AllowTextInput" Value="False"/>
			<Setter Property="AllowInputSpecialValues" Value="None"/>
		</Style>

		<Style TargetType="{x:Type local:KeyBindBox}">
			<Setter Property="Foreground" Value="{StaticResource Fore1Brush}"/>
			<Setter Property="Margin" Value="4,2" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="ToolTip" Value="{x:Static p:Resources.Tooltip_Keybindbox}"/>
		</Style>

		<Style TargetType="{x:Type Hyperlink}">
			<Setter Property="Foreground" Value="{StaticResource AccentLightBrush}" />
			<Setter Property="FontFamily" Value="Bahnschrift SemiLight" />
		</Style>



		<!--#endregion-->


		<!--#region STYLES CUSTOM-->

		<Style x:Key="Layer2Style" TargetType="{x:Type Control}" BasedOn="{StaticResource {x:Type Control}}">
			<Setter Property="Background" Value="{StaticResource Back2Brush}" />
			<Setter Property="Foreground" Value="{StaticResource TextBlockBrush}" />
			<Setter Property="FontWeight" Value="Normal" />
		</Style>

		<Style x:Key="InfoStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource {x:Type Control}}">
			<Setter Property="Background" Value="{StaticResource Back2Brush}" />
			<Setter Property="Foreground" Value="{StaticResource TextInfoBrush}" />
			<Setter Property="FontWeight" Value="Normal" />
		</Style>

		<Style x:Key="TextblockInfoStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="Foreground" Value="{StaticResource TextInfoBrush}" />
			<Setter Property="Margin" Value="4,2" />
			<Setter Property="FontSize" Value="9pt" />
			<Setter Property="FontWeight" Value="Light" />
			<Setter Property="FontFamily" Value="Bahnschrift Light" />
		</Style>

		<Style x:Key="TextblockInactiveStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="FontSize" Value="11pt" />
			<Setter Property="Foreground" Value="{StaticResource TextInactiveBrush}" />
		</Style>

		<Style x:Key="TextblockGamepadStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="FontSize" Value="11pt" />
			<Setter Property="Foreground" Value="{StaticResource XboxPaleBrush}" />
		</Style>

		<Style x:Key="TextblockGuitarStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="FontSize" Value="11pt" />
			<Setter Property="Foreground" Value="{StaticResource XboxDefBrush}" />
		</Style>

		<Style x:Key="FloatNomarginStyle" TargetType="{x:Type Grid}">
			<Setter Property="Background" Value="{DynamicResource Back2Brush}" />
		</Style>
		<Style x:Key="FloatNomarginStyleBorder" TargetType="{x:Type Border}">
			<Setter Property="Background" Value="{DynamicResource Back2Brush}" />
		</Style>

		<Style x:Key="CaptureButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
			<Setter Property="Background" Value="{StaticResource XboxFadedBrush}"/>
			<Setter Property="Margin" Value="4,3"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="FontSize" Value="10pt"/>
			<Setter Property="ClickMode" Value="Release"/>
			<Setter Property="Content" Value="{x:Static p:Resources.Button_Capture}"/>
			<Setter Property="ToolTip" Value="{x:Static p:Resources.Tooltip_ButtonCapture}"/>
		</Style>

		<Style x:Key="HeaderStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{DynamicResource TextHeadingBrush}" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="FontSize" Value="14pt" />
			<Setter Property="FontWeight" Value="Bold" />
		</Style>

		<Style x:Key="GuitarButtonBorderStyle" TargetType="{x:Type Border}">
			<Setter Property="Margin" Value="2,4" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="CornerRadius" Value="16,16,4,4"/>
		</Style>

		<Style x:Key="SliderBorderStyle" TargetType="{x:Type Border}">
			<Setter Property="BorderBrush" Value="Gray"/>
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="CornerRadius" Value="1.5"/>
			<Setter Property="Margin" Value="0,4"/>
		</Style>

		<Style x:Key="MenuitemBlockHeader" TargetType="{x:Type MenuItem}">
			<Style.Resources>
				<Style TargetType="{x:Type Grid}">
					<Setter Property="Background" Value="{StaticResource Back3Brush}"/>
				</Style>
			</Style.Resources>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="IsEnabled" Value="False" />
			<Setter Property="StaysOpenOnClick" Value="True" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
		</Style>

		<!--#endregion-->


		<!--#region DATA TEMPLATES-->

		<DataTemplate x:Key="CLAbsentTemplate">
			<Grid Margin="4,1" VerticalAlignment="Center" Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="28" />
					<ColumnDefinition Width="*" MinWidth="72" />
					<ColumnDefinition Width="0" />
					<ColumnDefinition Width="32" />
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0" Text="{Binding Path=PlayerDisplayName}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockInactiveStyle}" HorizontalAlignment="Left" TextAlignment="Left" />
				<TextBlock Grid.Column="1" Text="{Binding Path=IsConnectedString}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockInactiveStyle}" HorizontalAlignment="Left" TextAlignment="Left" FontWeight="Normal" />
				<TextBlock Grid.Column="3" Text="{Binding Path=TranslateEnableSymbol}" Style="{StaticResource TextblockInactiveStyle}" HorizontalAlignment="Center" TextAlignment="Center" FontWeight="Bold" />
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="CLConnectedGpTemplate">
			<Grid Margin="4,1" VerticalAlignment="Center" Background="Transparent" >
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="28" />
					<ColumnDefinition Width="*" MinWidth="72" />
					<ColumnDefinition Width="50" />
					<ColumnDefinition Width="32" />
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0" Text="{Binding Path=PlayerDisplayName}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockGamepadStyle}" HorizontalAlignment="Left" TextAlignment="Left" />
				<TextBlock Grid.Column="1" Text="{Binding Path=ControllerSubType}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockGamepadStyle}" HorizontalAlignment="Left" TextAlignment="Left" FontWeight="SemiBold" />
				<TextBlock Grid.Column="2" Text="{Binding Path=BattLevelSymbol}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockGamepadStyle}" HorizontalAlignment="Right" TextAlignment="Center" FontWeight="SemiBold"
                           ToolTip="{x:Static p:Resources.Tooltip_BatteryLevel}" />
				<TextBlock Grid.Column="3" Text="{Binding Path=TranslateEnableSymbol}" Style="{StaticResource TextblockGamepadStyle}" Foreground="{StaticResource AccentLightBrush}" HorizontalAlignment="Center" TextAlignment="Center" FontWeight="Bold" />
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="CLConnectedGtrTemplate">
			<Grid Margin="4,1" VerticalAlignment="Center" Background="Transparent" >
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="28" />
					<ColumnDefinition Width="*" MinWidth="72" />
					<ColumnDefinition Width="50" />
					<ColumnDefinition Width="32" />
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0" Text="{Binding Path=PlayerDisplayName}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockGuitarStyle}" HorizontalAlignment="Left" TextAlignment="Left" />
				<TextBlock Grid.Column="1" Text="{Binding Path=ControllerSubType}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockGuitarStyle}" HorizontalAlignment="Left" TextAlignment="Left" FontWeight="SemiBold" />
				<TextBlock Grid.Column="2" Text="{Binding Path=BattLevelSymbol}" DataContext="{Binding Path=Controller}" Style="{StaticResource TextblockGuitarStyle}" HorizontalAlignment="Right" TextAlignment="Center" FontWeight="SemiBold"
                           ToolTip="{x:Static p:Resources.Tooltip_BatteryLevel}" />
				<TextBlock Grid.Column="3" Text="{Binding Path=TranslateEnableSymbol}" Style="{StaticResource TextblockGuitarStyle}" Foreground="{StaticResource AccentLightBrush}" HorizontalAlignment="Center" TextAlignment="Center" FontWeight="Bold" />
			</Grid>
		</DataTemplate>

		<!--#endregion-->


		<!--#region CONTROL TEMPLATE OVERRIDES-->

		<Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="BorderBrush" Value="{DynamicResource AccentLightBrush}"/>
			<Setter Property="Margin" Value="4,2"/>
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="1" >
								<Grid x:Name="markGrid">
									<Path x:Name="optionMark"
											Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
											Fill="{TemplateBinding BorderBrush}" Margin="1" Opacity="0" Stretch="None" />
									<Rectangle x:Name="indeterminateMark" Fill="{DynamicResource ForeGrayedBrush}" Margin="2" Opacity="0" />
								</Grid>
							</Border>
							<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" TextBlock.Foreground="{TemplateBinding Foreground}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource AccentPaleBrush}" />
								<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource AccentPaleBrush}" />
								<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource AccentLightBrush}" />
								<Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource AccentLightBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="checkBoxBorder" Property="Background" Value="Gray" />
								<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="Gray" />
								<Setter TargetName="optionMark" Property="Fill" Value="Gray" />
								<Setter TargetName="indeterminateMark" Property="Fill" Value="Gray" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource AccentLightBrush}" />
								<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource AccentLightBrush}" />
								<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource AccentPaleBrush}" />
								<Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource AccentPaleBrush}" />
							</Trigger>
							<Trigger Property="IsChecked" Value="true">
								<Setter TargetName="optionMark" Property="Opacity" Value="1" />
								<Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
							</Trigger>
							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter TargetName="optionMark" Property="Opacity" Value="0" />
								<Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource AccentPaleColor}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed" />
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0:0:0.05" Value="{StaticResource DisabledControlDarkColor}" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
									<EasingColorKeyFrame KeyTime="0:0:0.05" Value="{StaticResource DisabledForegroundColor}" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0:0:0.05" Value="{StaticResource DisabledBorderDarkColor}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualState x:Name="Checked">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource BorderLightColor}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unchecked" />
						<VisualState x:Name="Indeterminate" />
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="1" BorderThickness="1">
					<Border.BorderBrush>
						<SolidColorBrush Color="{DynamicResource BorderLightColor}" />
					</Border.BorderBrush>
					<Border.Background>
						<SolidColorBrush Color="{DynamicResource Back3Color}" />
					</Border.Background>
				</Border>
				<Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1">
					<Border.Background>
						<SolidColorBrush Color="{DynamicResource Back3Color}" />
					</Border.Background>
				</Border>
				<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource GlyphColor}" />
					</Path.Fill>
				</Path>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>

		<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels" Value="true" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
			<Setter Property="MinWidth" Value="64" />
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="Margin" Value="4,2" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="IsTextSearchEnabled" Value="False"/>
			<!--Sonst reagiert die CB auf Slidebar Eingaben-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Uneditable" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,1,23,1" VerticalAlignment="Center" HorizontalAlignment="Left">
							</ContentPresenter>
							<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
							<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
								<Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" BorderThickness="1">
										<Border.BorderBrush>
											<SolidColorBrush Color="{DynamicResource BorderLightColor}" />
										</Border.BorderBrush>
										<Border.Background>
											<SolidColorBrush Color="Transparent" />
										</Border.Background>
									</Border>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
							</Trigger>
							<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="1" />
								<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="true" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0:0:0.1" Value="{StaticResource AccentDarkColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0:0:0.1" Value="{StaticResource SelectedUnfocusedColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0:0:0.1" Value="{StaticResource AccentLightColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>



		<!--#endregion-->

	</Application.Resources>
</Application>
