//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeroSlidebarTranslator.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HeroSlidebarTranslator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capture ähnelt.
        /// </summary>
        public static string Button_Capture {
            get {
                return ResourceManager.GetString("Button_Capture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open setup... ähnelt.
        /// </summary>
        public static string Button_OpenSetup {
            get {
                return ResourceManager.GetString("Button_OpenSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Readout current value ähnelt.
        /// </summary>
        public static string Button_PreviewAxisValue {
            get {
                return ResourceManager.GetString("Button_PreviewAxisValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quit application ähnelt.
        /// </summary>
        public static string Button_QuitApp {
            get {
                return ResourceManager.GetString("Button_QuitApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Button_Settings {
            get {
                return ResourceManager.GetString("Button_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon heroslidebartranslator_active {
            get {
                object obj = ResourceManager.GetObject("heroslidebartranslator_active", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon heroslidebartranslator_normal {
            get {
                object obj = ResourceManager.GetObject("heroslidebartranslator_normal", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a controller to setup the Slidebar translation. ähnelt.
        /// </summary>
        public static string Info_SelectController {
            get {
                return ResourceManager.GetString("Info_SelectController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turning off the controller failed, because &quot;XInput1_3.dll&quot; is missing.
        ///Try installing it through the DirectX web installer or manually. ähnelt.
        /// </summary>
        public static string Info_XInputDllError {
            get {
                return ResourceManager.GetString("Info_XInputDllError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find &quot;XInput1_3.dll&quot; ähnelt.
        /// </summary>
        public static string Info_XInputDllError_Caption {
            get {
                return ResourceManager.GetString("Info_XInputDllError_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always ähnelt.
        /// </summary>
        public static string Item_ActivationModeAlways {
            get {
                return ResourceManager.GetString("Item_ActivationModeAlways", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game in foreground ähnelt.
        /// </summary>
        public static string Item_ActivationModeForeground {
            get {
                return ResourceManager.GetString("Item_ActivationModeForeground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game is running ähnelt.
        /// </summary>
        public static string Item_ActivationModeRunning {
            get {
                return ResourceManager.GetString("Item_ActivationModeRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Axis 0: LeftStickX ähnelt.
        /// </summary>
        public static string Item_Axis0LeftStickX {
            get {
                return ResourceManager.GetString("Item_Axis0LeftStickX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Axis 1: LeftStickY ähnelt.
        /// </summary>
        public static string Item_Axis1LeftStickY {
            get {
                return ResourceManager.GetString("Item_Axis1LeftStickY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Axis 2: RightStickX ähnelt.
        /// </summary>
        public static string Item_Axis2RightStickX {
            get {
                return ResourceManager.GetString("Item_Axis2RightStickX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Axis 3: RightStickY ähnelt.
        /// </summary>
        public static string Item_Axis3RightStickY {
            get {
                return ResourceManager.GetString("Item_Axis3RightStickY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Axis 4: LeftTrigger ähnelt.
        /// </summary>
        public static string Item_Axis4LeftTrigger {
            get {
                return ResourceManager.GetString("Item_Axis4LeftTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Axis 5: RightTrigger ähnelt.
        /// </summary>
        public static string Item_Axis5RightTrigger {
            get {
                return ResourceManager.GetString("Item_Axis5RightTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activation mode ähnelt.
        /// </summary>
        public static string Label_ActivationMode {
            get {
                return ResourceManager.GetString("Label_ActivationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Controllers ähnelt.
        /// </summary>
        public static string Label_Controllers {
            get {
                return ResourceManager.GetString("Label_Controllers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Idle deadzone ähnelt.
        /// </summary>
        public static string Label_IdleDeadzone {
            get {
                return ResourceManager.GetString("Label_IdleDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Idle value ähnelt.
        /// </summary>
        public static string Label_IdleValue {
            get {
                return ResourceManager.GetString("Label_IdleValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power off controller ähnelt.
        /// </summary>
        public static string Label_PowerOffController {
            get {
                return ResourceManager.GetString("Label_PowerOffController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select axis to use ähnelt.
        /// </summary>
        public static string Label_SelectAxis {
            get {
                return ResourceManager.GetString("Label_SelectAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll rate (highest = best) ähnelt.
        /// </summary>
        public static string Label_SelectPollRate {
            get {
                return ResourceManager.GetString("Label_SelectPollRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Translator setup ähnelt.
        /// </summary>
        public static string Label_Translator {
            get {
                return ResourceManager.GetString("Label_Translator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run application at startup ähnelt.
        /// </summary>
        public static string Option_AutostartApp {
            get {
                return ResourceManager.GetString("Option_AutostartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notify on low battery ähnelt.
        /// </summary>
        public static string Option_BatteryAlerts {
            get {
                return ResourceManager.GetString("Option_BatteryAlerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invert ähnelt.
        /// </summary>
        public static string Option_Invert {
            get {
                return ResourceManager.GetString("Option_Invert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Translator active ähnelt.
        /// </summary>
        public static string Option_TranslatorActive {
            get {
                return ResourceManager.GetString("Option_TranslatorActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ACTIVE ähnelt.
        /// </summary>
        public static string State_Active {
            get {
                return ResourceManager.GetString("State_Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NOW ACTIVATED ähnelt.
        /// </summary>
        public static string State_AppActivated {
            get {
                return ResourceManager.GetString("State_AppActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CURRENTLY DEACTIVATED ähnelt.
        /// </summary>
        public static string State_AppDeactivated {
            get {
                return ResourceManager.GetString("State_AppDeactivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INACTIVE ähnelt.
        /// </summary>
        public static string State_Inactive {
            get {
                return ResourceManager.GetString("State_Inactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OFF ähnelt.
        /// </summary>
        public static string State_Off {
            get {
                return ResourceManager.GetString("State_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ON ähnelt.
        /// </summary>
        public static string State_On {
            get {
                return ResourceManager.GetString("State_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ✗ ähnelt.
        /// </summary>
        public static string Symbol_Cross {
            get {
                return ResourceManager.GetString("Symbol_Cross", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ✓ ähnelt.
        /// </summary>
        public static string Symbol_Tick {
            get {
                return ResourceManager.GetString("Symbol_Tick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Battery ähnelt.
        /// </summary>
        public static string Text_Battery {
            get {
                return ResourceManager.GetString("Text_Battery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;none&gt; ähnelt.
        /// </summary>
        public static string Text_KeybindingNone {
            get {
                return ResourceManager.GetString("Text_KeybindingNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart application now? ähnelt.
        /// </summary>
        public static string Text_RestartApp {
            get {
                return ResourceManager.GetString("Text_RestartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default settings ähnelt.
        /// </summary>
        public static string Text_RestoreDefaults {
            get {
                return ResourceManager.GetString("Text_RestoreDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {}The battery of {0} is low or empty! Change it now! ähnelt.
        /// </summary>
        public static string TextF_LowBattWarning {
            get {
                return ResourceManager.GetString("TextF_LowBattWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Battery is low ähnelt.
        /// </summary>
        public static string TextF_LowBattWarning_Caption {
            get {
                return ResourceManager.GetString("TextF_LowBattWarning_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setup HeroSlidebarTranslator ähnelt.
        /// </summary>
        public static string Title_MainWindow {
            get {
                return ResourceManager.GetString("Title_MainWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled: The application automatically starts in the background when the user logs in. ähnelt.
        /// </summary>
        public static string Tooltip_AutostartApp {
            get {
                return ResourceManager.GetString("Tooltip_AutostartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shows the battery level. ähnelt.
        /// </summary>
        public static string Tooltip_BatteryLevel {
            get {
                return ResourceManager.GetString("Tooltip_BatteryLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click to capture current axis value for this button. ähnelt.
        /// </summary>
        public static string Tooltip_ButtonCapture {
            get {
                return ResourceManager.GetString("Tooltip_ButtonCapture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current value of the selected axis. ähnelt.
        /// </summary>
        public static string Tooltip_CurrentAxisValue {
            get {
                return ResourceManager.GetString("Tooltip_CurrentAxisValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accepted values: -100 to +100 ähnelt.
        /// </summary>
        public static string Tooltip_Integerupdown100 {
            get {
                return ResourceManager.GetString("Tooltip_Integerupdown100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click this box and press a button to edit the keyboard binding.
        ///(Not all keys are accepted.) ähnelt.
        /// </summary>
        public static string Tooltip_Keybindbox {
            get {
                return ResourceManager.GetString("Tooltip_Keybindbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty ähnelt.
        /// </summary>
        public static string Xbox_BatteryLevelEmpty {
            get {
                return ResourceManager.GetString("Xbox_BatteryLevelEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full ähnelt.
        /// </summary>
        public static string Xbox_BatteryLevelFull {
            get {
                return ResourceManager.GetString("Xbox_BatteryLevelFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low ähnelt.
        /// </summary>
        public static string Xbox_BatteryLevelLow {
            get {
                return ResourceManager.GetString("Xbox_BatteryLevelLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium ähnelt.
        /// </summary>
        public static string Xbox_BatteryLevelMedium {
            get {
                return ResourceManager.GetString("Xbox_BatteryLevelMedium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string Xbox_BatteryLevelUnknown {
            get {
                return ResourceManager.GetString("Xbox_BatteryLevelUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alkaline ähnelt.
        /// </summary>
        public static string Xbox_BatteryTypeAlkaline {
            get {
                return ResourceManager.GetString("Xbox_BatteryTypeAlkaline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed ähnelt.
        /// </summary>
        public static string Xbox_BatteryTypeDisconnected {
            get {
                return ResourceManager.GetString("Xbox_BatteryTypeDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NiMH ähnelt.
        /// </summary>
        public static string Xbox_BatteryTypeNimh {
            get {
                return ResourceManager.GetString("Xbox_BatteryTypeNimh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string Xbox_BatteryTypeUnknown {
            get {
                return ResourceManager.GetString("Xbox_BatteryTypeUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wired ähnelt.
        /// </summary>
        public static string Xbox_BatteryTypeWired {
            get {
                return ResourceManager.GetString("Xbox_BatteryTypeWired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Absent ähnelt.
        /// </summary>
        public static string Xbox_ConnectionAbsent {
            get {
                return ResourceManager.GetString("Xbox_ConnectionAbsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connected ähnelt.
        /// </summary>
        public static string Xbox_ConnectionConnected {
            get {
                return ResourceManager.GetString("Xbox_ConnectionConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Any ähnelt.
        /// </summary>
        public static string Xbox_PlayerAny {
            get {
                return ResourceManager.GetString("Xbox_PlayerAny", resourceCulture);
            }
        }
    }
}
